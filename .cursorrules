# rxalarmd GDB调试脚本项目规则

## 项目概述
这是一个用于调试 rxalarmd 进程的 GDB 自动化脚本工具项目。提供了从新手引导到高级调试的完整解决方案，主要用于捕获和分析特定告警的调试信息。

## 核心文件结构

### 主要脚本
- `rxalarmd_gdb_enhanced.sh` - 核心调试脚本，功能最完整
- `quick_start.sh` - 新手引导脚本，提供交互式操作
- `rxalarmd_gdb.sh` - 原始版本脚本，仅供参考

### 配置文件  
- `breakpoints.conf` - rxalarmd 进程调试断点配置
- `test_breakpoints.conf` - 测试程序断点配置
- `breakpoints_fixed.conf` - 修复版断点配置（如存在）

### 文档文件
- `项目文件说明.md` - 项目结构和使用指引
- `使用指南.md` - 详细的使用说明文档
- `需求符合性报告.md` - 功能验证和特性说明
- `README.md` - 完整的项目文档

## 代码风格和最佳实践

### Shell脚本规范
- 使用 bash shebang: `#!/bin/bash`
- 变量命名使用下划线分隔: `variable_name`
- 函数命名使用下划线分隔: `function_name()`
- 字符串使用双引号包围
- 路径和变量引用使用双引号: `"$variable"`
- 错误处理使用明确的退出码和错误信息
- 使用 `local` 声明函数内部变量

### 用户体验设计
- 提供清晰的选项菜单 (a/b/c/d 格式)
- 使用 emoji 或符号增强可读性 (?, ?)
- 提供默认值和用户输入提示
- 重要操作前进行确认
- 显示命令执行过程和结果

### 交互式脚本规范
- 使用 `read -p` 进行用户输入
- 提供清晰的操作选项说明
- 对无效输入进行错误处理
- 支持大小写不敏感的选择
- 提供退出选项

### 错误处理和权限管理
- 检查脚本运行目录和依赖文件
- 验证进程存在性和访问权限
- 自动处理 ptrace 权限设置
- 提供 sudo 权限提示和处理
- 清理测试进程和临时文件

### 日志和输出规范
- 使用时间戳格式: `$(date '+%Y-%m-%d %H:%M:%S')`
- 日志文件命名: `debug_进程名_时间戳.log`
- 分级输出: 信息(?), 错误(错误), 成功(?)
- 命令执行显示: 显示实际执行的命令
- 结果展示: 列出生成的文件和日志

## 文件组织和命名规范

### 断点配置文件
- 生产环境: `breakpoints.conf`
- 测试环境: `test_breakpoints.conf`  
- 修复版本: `breakpoints_fixed.conf`
- 格式: `文件名:行号 if 条件 | 打印命令1; 打印命令2`
- 支持注释行（以 # 开头）

### 测试程序管理
- 测试程序放在 `test/` 目录
- 使用 Makefile 管理编译
- 测试程序自动启动和清理
- 支持多线程测试场景

### 日志文件管理
- 自动生成时间戳文件名
- 测试日志: `test_alarm.log`
- 调试日志: `debug_进程名_时间戳.log`
- 临时文件自动清理

## GDB调试特性规范

### 断点设置
- 支持条件断点语法
- 断点位置格式: `filename:linenumber`
- 条件表达式使用 C/C++ 语法
- 打印命令用分号分隔

### 调试信息记录
- 记录线程ID和时间戳
- 记录调用栈信息（最近3层）
- 记录变量值和结构体内容
- 统计运行时间和触发次数

### 进程管理
- 自动查找目标进程PID
- 进程存在性验证
- 进程权限检查
- 安全的进程附加和分离

## 新手友好性设计

### 快速入门流程
1. 运行 `quick_start.sh` 获得引导
2. 选择测试模式验证功能
3. 逐步进入实际调试场景
4. 提供帮助信息和文档链接

### 错误预防
- 检查编译环境和依赖
- 自动设置必要的系统权限
- 提供清晰的错误信息和解决方案
- 自动清理测试环境

### 文档层次
- `项目文件说明.md` - 快速了解项目结构
- `quick_start.sh` - 交互式入门
- `使用指南.md` - 详细使用说明
- `README.md` - 完整技术文档

## 测试和验证

### 功能测试
- 测试程序编译验证
- 断点触发功能测试
- 权限设置验证
- 日志生成验证

### 兼容性测试
- 不同 Linux 发行版兼容性
- 不同 GDB 版本兼容性
- root 和普通用户权限测试
- 进程存在和不存在场景

## 安全和维护

### 权限安全
- 最小权限原则
- ptrace 权限临时设置
- 敏感信息保护
- 临时文件安全清理

### 代码维护
- 模块化脚本设计
- 配置与代码分离
- 版本兼容性考虑
- 清晰的代码注释

## 项目发布规范

### 版本管理
- 主脚本版本信息
- 功能变更记录
- 配置文件格式版本
- 向后兼容性说明

### 文档同步
- 代码变更同步更新文档
- 示例命令保持有效性
- 错误信息和解决方案更新
- 新功能使用指南补充 